# -*- coding: utf-8 -*-
"""TAStrikeReddit.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hQ8ntQyEQ5q_tYXOEdqVOtboqU4TojiP
"""

#install praw

pip install praw

#imports for reddit scraping/diagrams
import praw
import pandas as pd
import datetime
# clean tweets
import nltk                                # Python library for NLP
from nltk.corpus import twitter_samples    # sample Twitter dataset from NLTK
import matplotlib.pyplot as plt            # library for visualization
import random                              # pseudo-random number generator
import re                                  # library for regular expression operations
import string                              # for string operations
from nltk.corpus import stopwords          # module for stop words that come with NLTK
from nltk.stem import PorterStemmer        # module for stemming
from nltk.tokenize import word_tokenize   # module for tokenizing strings
from textblob import TextBlob
import seaborn as sns

from nltk.sentiment import SentimentIntensityAnalyzer
from tqdm.notebook import tqdm
nltk.download('vader_lexicon')
nltk.download('stopwords')

plt.rcParams['figure.dpi'] = 200
plt.rcParams['savefig.dpi'] = 200

#my developer access code
reddit_read_only = praw.Reddit(client_id="RGdKiAFJPXF58ib0Tr4fcw",
                               client_secret="1hXSX11y-nMi8Fobsp9NDMiT7s0mMA",
                               user_agent="TA Strike Scraper UCSB")

#the subreddit that I'm using
subreddit = reddit_read_only.subreddit("UCSantaBarbara")

#checking for keywords
keyword_list = ["strike", "grads", "salary", "wages", "cola", " uaw ", "union"]

title0 = []
selftext0 = []
comment0 = []
for post in subreddit.new(limit=3000):
  dt=datetime.datetime.utcfromtimestamp(post.created_utc)
  if datetime.datetime(2022,11,7,0,0,0) < dt < datetime.datetime(2022,11,13,11,59,59):
    title0.append(post.title)
    selftext0.append(post.selftext)
    post.comments.replace_more(limit=0)
    for comment in post.comments.list():
      comment0.append(comment.body)

title1 = []
selftext1 = []
comment1 = []
for post in subreddit.new(limit=3000):
  dt=datetime.datetime.utcfromtimestamp(post.created_utc)
  if datetime.datetime(2022,11,14,0,0,0) < dt < datetime.datetime(2022,11,20,11,59,59):
    title1.append(post.title)
    selftext1.append(post.selftext)
    post.comments.replace_more(limit=0)
    for comment in post.comments.list():
      comment1.append(comment.body)

title2 = []
selftext2 = []
comment2 = []
for post in subreddit.new(limit=3000):
  dt=datetime.datetime.utcfromtimestamp(post.created_utc)
  if datetime.datetime(2022,11,21,0,0,0) < dt < datetime.datetime(2022,11,27,11,59,59):
    title2.append(post.title)
    selftext2.append(post.selftext)
    post.comments.replace_more(limit=0)
    for comment in post.comments.list():
      comment2.append(comment.body)

title3 = []
selftext3 = []
comment3 = []
for post in subreddit.new(limit=3000):
  dt=datetime.datetime.utcfromtimestamp(post.created_utc)
  if datetime.datetime(2022,11,28,0,0,0) < dt < datetime.datetime(2022,12,4,11,59,59):
    title3.append(post.title)
    selftext3.append(post.selftext)
    post.comments.replace_more(limit=0)
    for comment in post.comments.list():
      comment3.append(comment.body)

title4 = []
selftext4 = []
comment4 = []
for post in subreddit.new(limit=3000):
  dt=datetime.datetime.utcfromtimestamp(post.created_utc)
  if datetime.datetime(2022,12,5,0,0,0) < dt < datetime.datetime(2022,12,11,11,59,59):
    title4.append(post.title)
    selftext4.append(post.selftext)
    post.comments.replace_more(limit=0)
    for comment in post.comments.list():
      comment4.append(comment.body)

title5 = []
selftext5 = []
comment5 = []
for post in subreddit.new(limit=3000):
  dt=datetime.datetime.utcfromtimestamp(post.created_utc)
  if datetime.datetime(2022,12,12,0,0,0) < dt < datetime.datetime(2022,12,18,11,59,59):
    title5.append(post.title)
    selftext5.append(post.selftext)
    post.comments.replace_more(limit=0)
    for comment in post.comments.list():
      comment5.append(comment.body)

title6 = []
selftext6 = []
comment6 = []
for post in subreddit.new(limit=3000):
  dt=datetime.datetime.utcfromtimestamp(post.created_utc)
  if datetime.datetime(2022,12,19,0,0,0) < dt < datetime.datetime(2022,12,25,11,59,59):
    title6.append(post.title)
    selftext6.append(post.selftext)
    post.comments.replace_more(limit=0)
    for comment in post.comments.list():
      comment6.append(comment.body)

#length
print(len(title0))
print(len(selftext0))
print(len(comment0))

print(len(title1))
print(len(selftext1))
print(len(comment1))

print(len(title2))
print(len(selftext2))
print(len(comment2))

print(len(title3))
print(len(selftext3))
print(len(comment3))

print(len(title4))
print(len(selftext4))
print(len(comment4))

print(len(title5))
print(len(selftext5))
print(len(comment5))

print(len(title6))
print(len(selftext6))
print(len(comment6))

#making a list of titles
titles_list0=[]
for title in title0:
  added = False
  for keyword in keyword_list:
    if keyword in title.lower() and added == False:
      titles_list0.append(title)
      added = True

titles_list1=[]
for title in title1:
  added = False
  for keyword in keyword_list:
    if keyword in title.lower() and added == False:
      titles_list1.append(title)
      added = True

titles_list2=[]
for title in title2:
  added = False
  for keyword in keyword_list:
    if keyword in title.lower() and added == False:
      titles_list2.append(title)
      added = True

titles_list3=[]
for title in title3:
  added = False
  for keyword in keyword_list:
    if keyword in title.lower() and added == False:
      titles_list3.append(title)
      added = True

titles_list4=[]
for title in title4:
  added = False
  for keyword in keyword_list:
    if keyword in title.lower() and added == False:
      titles_list4.append(title)
      added = True

titles_list5=[]
for title in title5:
  added = False
  for keyword in keyword_list:
    if keyword in title.lower() and added == False:
      titles_list5.append(title)
      added = True

titles_list6=[]
for title in title6:
  added = False
  for keyword in keyword_list:
    if keyword in title.lower() and added == False:
      titles_list6.append(title)
      added = True

#making a list of selftexts
selftexts_list0 = []
for selftext in selftext0:
  added = False
  for keyword in keyword_list:
    if keyword in selftext.lower() and added == False:
      selftexts_list0.append(selftext)
      added = True

selftexts_list1 = []
for selftext in selftext1:
  added = False
  for keyword in keyword_list:
    if keyword in selftext.lower() and added == False:
      selftexts_list1.append(selftext)
      added = True

selftexts_list2 = []
for selftext in selftext2:
  added = False
  for keyword in keyword_list:
    if keyword in selftext.lower() and added == False:
      selftexts_list2.append(selftext)
      added = True

selftexts_list3 = []
for selftext in selftext3:
  added = False
  for keyword in keyword_list:
    if keyword in selftext.lower() and added == False:
      selftexts_list3.append(selftext)
      added = True

selftexts_list4 = []
for selftext in selftext4:
  added = False
  for keyword in keyword_list:
    if keyword in selftext.lower() and added == False:
      selftexts_list4.append(selftext)
      added = True

selftexts_list5 = []
for selftext in selftext5:
  added = False
  for keyword in keyword_list:
    if keyword in selftext.lower() and added == False:
      selftexts_list5.append(selftext)
      added = True

selftexts_list6 = []
for selftext in selftext6:
  added = False
  for keyword in keyword_list:
    if keyword in selftext.lower() and added == False:
      selftexts_list6.append(selftext)
      added = True

#making a list of all comments and replies
comments_list0 = []
for comment in comment0:
  added = False
  for keyword in keyword_list:
    if keyword in comment.lower() and added == False:
      comments_list0.append(comment)
      added = True

comments_list1 = []
for comment in comment1:
  added = False
  for keyword in keyword_list:
    if keyword in comment.lower() and added == False:
      comments_list1.append(comment)
      added = True

comments_list2 = []
for comment in comment2:
  added = False
  for keyword in keyword_list:
    if keyword in comment.lower() and added == False:
      comments_list2.append(comment)
      added = True

comments_list3 = []
for comment in comment3:
  added = False
  for keyword in keyword_list:
    if keyword in comment.lower() and added == False:
      comments_list3.append(comment)
      added = True

comments_list4 = []
for comment in comment4:
  added = False
  for keyword in keyword_list:
    if keyword in comment.lower() and added == False:
      comments_list4.append(comment)
      added = True

comments_list5 = []
for comment in comment5:
  added = False
  for keyword in keyword_list:
    if keyword in comment.lower() and added == False:
      comments_list5.append(comment)
      added = True

comments_list6 = []
for comment in comment6:
  added = False
  for keyword in keyword_list:
    if keyword in comment.lower() and added == False:
      comments_list6.append(comment)
      added = True

#check results
print('week 0')
print(titles_list0)
print(selftexts_list0)
print(comments_list0)
print(len(titles_list0))
print(len(selftexts_list0))
print(len(comments_list0))
print('week 1')
print(titles_list1)
print(selftexts_list1)
print(comments_list1)
print(len(titles_list1))
print(len(selftexts_list1))
print(len(comments_list1))
print('week 2')
print(titles_list2)
print(selftexts_list2)
print(comments_list2)
print(len(titles_list2))
print(len(selftexts_list2))
print(len(comments_list2))
print('week 3')
print(titles_list3)
print(selftexts_list3)
print(comments_list3)
print(len(titles_list3))
print(len(selftexts_list3))
print(len(comments_list3))
print('week 4')
print(titles_list4)
print(selftexts_list4)
print(comments_list4)
print(len(titles_list4))
print(len(selftexts_list4))
print(len(comments_list4))
print('week 5')
print(titles_list5)
print(selftexts_list5)
print(comments_list5)
print(len(titles_list5))
print(len(selftexts_list5))
print(len(comments_list5))
print('week 6')
print(titles_list6)
print(selftexts_list6)
print(comments_list6)
print(len(titles_list6))
print(len(selftexts_list6))
print(len(comments_list6))

#making the dataframe based on the week you choose
week0_newlist=titles_list0+selftexts_list0+comments_list0
reddit_string0 = ' '
df0 = pd.DataFrame(week0_newlist, columns=['Week 0'])
comments=df0['Week 0']
comments=comments.to_frame()
for idx, row in comments.iterrows():
  comment = row['Week 0'].replace('\n', '')
  reddit_string0 += comment

week1_newlist=titles_list1+selftexts_list1+comments_list1
reddit_string1 = ' '
df1 = pd.DataFrame(week1_newlist, columns=['Week 1'])
comments=df1['Week 1']
comments=comments.to_frame()
for idx, row in comments.iterrows():
  comment = row['Week 1'].replace('\n', '')
  reddit_string1 += comment

week2_newlist=titles_list2+selftexts_list2+comments_list2
reddit_string2 = ' '
df2 = pd.DataFrame(week2_newlist, columns=['Week 2'])
comments=df2['Week 2']
comments=comments.to_frame()
for idx, row in comments.iterrows():
  comment = row['Week 2'].replace('\n', '')
  reddit_string2 += comment

week3_newlist=titles_list3+selftexts_list3+comments_list3
reddit_string3 = ' '
df3 = pd.DataFrame(week3_newlist, columns=['Week 3'])
comments=df3['Week 3']
comments=comments.to_frame()
for idx, row in comments.iterrows():
  comment = row['Week 3'].replace('\n', '')
  reddit_string3 += comment

week4_newlist=titles_list4+selftexts_list4+comments_list4
reddit_string4 = ' '
df4 = pd.DataFrame(week4_newlist, columns=['Week 4'])
comments=df4['Week 4']
comments=comments.to_frame()
for idx, row in comments.iterrows():
  comment = row['Week 4'].replace('\n', '')
  reddit_string4 += comment

week5_newlist=titles_list5+selftexts_list5+comments_list5
reddit_string5 = ' '
df5 = pd.DataFrame(week5_newlist, columns=['Week 5'])
comments=df5['Week 5']
comments=comments.to_frame()
for idx, row in comments.iterrows():
  comment = row['Week 5'].replace('\n', '')
  reddit_string5 += comment

week6_newlist=titles_list6+selftexts_list6+comments_list6
reddit_string6 = ' '
df6 = pd.DataFrame(week2_newlist, columns=['Week 6'])
comments=df6['Week 6']
comments=comments.to_frame()
for idx, row in comments.iterrows():
  comment = row['Week 6'].replace('\n', '')
  reddit_string6 += comment

print(df3)

saveddataframe=pd.concat([df0,df1,df2,df3,df4,df5,df6], axis=1)
print(saveddataframe)

print(reddit_string0)
print(reddit_string1)
print(reddit_string2)
print(reddit_string3)
print(reddit_string4)
print(reddit_string5)
print(reddit_string6)

sia = SentimentIntensityAnalyzer()
sia.polarity_scores(reddit_string0)

sia = SentimentIntensityAnalyzer()
sia.polarity_scores(reddit_string1)

sia = SentimentIntensityAnalyzer()
sia.polarity_scores(reddit_string2)

sia = SentimentIntensityAnalyzer()
sia.polarity_scores(reddit_string3)

sia = SentimentIntensityAnalyzer()
sia.polarity_scores(reddit_string4)

sia = SentimentIntensityAnalyzer()
sia.polarity_scores(reddit_string5)

sia = SentimentIntensityAnalyzer()
sia.polarity_scores(reddit_string6)

from google.colab import files
saveddataframe.to_csv('alltastrikeposts.csv', encoding = 'utf-8-sig') 
files.download('alltastrikeposts.csv')